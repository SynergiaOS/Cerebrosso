#cloud-config
# 🐺 Projekt Cerberus Phoenix v2.0 - Cloud Init Configuration
# Automatyczna konfiguracja VM Oracle Cloud Free Tier

package_update: true
package_upgrade: true

packages:
  - docker.io
  - docker-compose
  - git
  - curl
  - wget
  - htop
  - vim
  - unzip
  - jq
  - make
  - build-essential
  - ca-certificates
  - gnupg
  - lsb-release
  - nginx
  - certbot
  - python3-certbot-nginx
  - ufw
  - fail2ban
  - python3-pip
  - python3-venv

# 🐳 Docker configuration
groups:
  - docker

users:
  - default
  - name: ubuntu
    groups: [sudo, docker]
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL

# 📁 Create directories
runcmd:
  # 🔧 System setup
  - systemctl enable docker
  - systemctl start docker
  - usermod -aG docker ubuntu
  
  # 🦀 Install Rust
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  - source /home/ubuntu/.cargo/env
  - echo 'source /home/ubuntu/.cargo/env' >> /home/ubuntu/.bashrc
  
  # 📦 Install Node.js (via NodeSource)
  - curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
  - apt-get install -y nodejs
  
  # ☁️ Install Terraform
  - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
  - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
  - apt update && apt install terraform
  
  # 🐺 Install Apko (for building minimal container images)
  - wget https://github.com/chainguard-dev/apko/releases/latest/download/apko_linux_amd64.tar.gz
  - tar -xzf apko_linux_amd64.tar.gz
  - mv apko /usr/local/bin/
  - chmod +x /usr/local/bin/apko
  
  # 📊 Install monitoring tools
  - docker pull prom/prometheus:latest
  - docker pull grafana/grafana:latest
  - docker pull prom/node-exporter:latest
  
  # 🧠 Pull AI/ML images
  - docker pull qdrant/qdrant:latest
  - docker pull ollama/ollama:latest
  
  # 🌊 Pull Kestra
  - docker pull kestra/kestra:latest
  
  # 🚪 Pull Traefik
  - docker pull traefik:v3.0
  
  # 📁 Create project directories
  - mkdir -p /opt/cerberus
  - mkdir -p /opt/cerberus/data
  - mkdir -p /opt/cerberus/logs
  - mkdir -p /opt/cerberus/secrets
  - chown -R ubuntu:ubuntu /opt/cerberus
  
  # 🔐 Setup secrets directory with proper permissions
  - chmod 700 /opt/cerberus/secrets
  
  # 📊 Setup monitoring data directories
  - mkdir -p /opt/cerberus/data/prometheus
  - mkdir -p /opt/cerberus/data/grafana
  - mkdir -p /opt/cerberus/data/qdrant
  - mkdir -p /opt/cerberus/data/kestra
  - chown -R ubuntu:ubuntu /opt/cerberus/data
  
  # 🔥 Setup firewall
  - ufw allow ssh
  - ufw allow 80/tcp
  - ufw allow 443/tcp
  - ufw allow 8080/tcp
  - ufw allow 8081/tcp
  - ufw allow 8082/tcp
  - ufw allow 3000/tcp
  - ufw allow 3001/tcp
  - ufw allow 6333/tcp
  - ufw allow 9090/tcp
  - ufw --force enable
  
  # 🚀 Clone and setup Cerberus repository
  - cd /opt/cerberus
  - git clone https://github.com/SynergiaOS/Cerebros.git .
  - chown -R ubuntu:ubuntu /opt/cerberus
  
  # 🔧 Setup environment
  - echo 'export CERBERUS_HOME=/opt/cerberus' >> /home/ubuntu/.bashrc
  - echo 'export PATH=$PATH:/opt/cerberus' >> /home/ubuntu/.bashrc
  - echo 'cd /opt/cerberus' >> /home/ubuntu/.bashrc
  
  # 📝 Create welcome message
  - |
    cat > /etc/motd << 'EOF'
    
    🐺 ═══════════════════════════════════════════════════════════════════════════════
    
         ██████╗███████╗██████╗ ██████╗ ███████╗██████╗ ██╗   ██╗███████╗
        ██╔════╝██╔════╝██╔══██╗██╔══██╗██╔════╝██╔══██╗██║   ██║██╔════╝
        ██║     █████╗  ██████╔╝██████╔╝█████╗  ██████╔╝██║   ██║███████╗
        ██║     ██╔══╝  ██╔══██╗██╔══██╗██╔══╝  ██╔══██╗██║   ██║╚════██║
        ╚██████╗███████╗██║  ██║██████╔╝███████╗██║  ██║╚██████╔╝███████║
         ╚═════╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝
    
                            🔥 PHOENIX v2.0 🔥
                    Autonomiczny Ekosystem Solana HFT
    
    ═══════════════════════════════════════════════════════════════════════════════
    
    🚀 Szybki Start:
       make help          - Pokaż dostępne komendy
       make dev           - Uruchom stos deweloperski
       make deploy-cloud  - Deploy na Oracle Cloud
    
    📊 Monitoring:
       http://$(curl -s ifconfig.me):3001  - Grafana Dashboard
       http://$(curl -s ifconfig.me):9090  - Prometheus Metrics
       http://$(curl -s ifconfig.me):8082  - Kestra Workflows
    
    🔧 Lokalizacja: /opt/cerberus
    📚 Dokumentacja: https://github.com/SynergiaOS/Cerebros
    
    ═══════════════════════════════════════════════════════════════════════════════
    EOF

# 📝 Write files
write_files:
  - path: /opt/cerberus/deploy.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      # 🐺 Cerberus Phoenix v2.0 - Quick Deploy Script
      
      echo "🔥 Deploying Cerberus Phoenix v2.0..."
      
      cd /opt/cerberus
      
      # Pull latest changes
      git pull origin main
      
      # Build and start services
      make phoenix-restart
      
      echo "✅ Cerberus Phoenix v2.0 deployed successfully!"
      echo "📊 Dashboard: http://$(curl -s ifconfig.me):3000"
      echo "🧠 Cerebro API: http://$(curl -s ifconfig.me):8080"
      echo "🥷 HFT-Ninja API: http://$(curl -s ifconfig.me):8081"

  - path: /home/ubuntu/.bash_aliases
    permissions: '0644'
    content: |
      # 🐺 Cerberus Phoenix v2.0 - Bash Aliases
      alias cerberus='cd /opt/cerberus'
      alias cstart='cd /opt/cerberus && make dev'
      alias cstop='cd /opt/cerberus && make dev-stop'
      alias crestart='cd /opt/cerberus && make phoenix-restart'
      alias cstatus='cd /opt/cerberus && make status'
      alias clogs='cd /opt/cerberus && make logs'
      alias cdeploy='cd /opt/cerberus && ./deploy.sh'

# 🔄 Final commands
final_message: |
  🐺 Cerberus Phoenix v2.0 VM is ready!
  
  🚀 Quick commands:
     cerberus  - Go to project directory
     cstart    - Start all services
     cstatus   - Check service status
     clogs     - View logs
  
  📊 Access your services:
     Dashboard: http://YOUR_IP:3000
     Grafana:   http://YOUR_IP:3001
     Kestra:    http://YOUR_IP:8082
