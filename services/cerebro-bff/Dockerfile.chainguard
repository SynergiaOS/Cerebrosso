# 🛡️ Cerberus Phoenix v2.0 - Cerebro-BFF Secured Dockerfile
# Ultra-secure multi-stage build with distroless images

# 🏗️ Build stage - Rust builder with security hardening
FROM rust:1.82-slim as builder

# 📦 Install build dependencies with security hardening
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 📁 Set working directory
WORKDIR /app

# 👤 Create non-root user for build
RUN groupadd -r builder && useradd -r -g builder builder
RUN chown builder:builder /app
USER builder

# 📋 Copy dependency files first for better caching
COPY --chown=builder:builder Cargo.toml Cargo.lock ./

# 🚀 Create dummy main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# 📦 Build dependencies (this layer will be cached)
RUN cargo build --release && rm -rf src

# 📁 Copy source code and migrations
COPY --chown=builder:builder src ./src
COPY --chown=builder:builder migrations ./migrations

# 🏗️ Build the application with security optimizations
RUN cargo build --release && strip target/release/cerebro-bff

# 🛡️ Runtime stage - Google Distroless with curl for health checks
FROM gcr.io/distroless/cc-debian12:latest

# 📁 Create app directory
WORKDIR /app

# 📋 Copy binary from builder stage
COPY --from=builder /app/target/release/cerebro-bff /usr/local/bin/cerebro-bff

# 👤 Switch to non-root user (distroless default)
USER 65532:65532

# 🌐 Expose port
EXPOSE 8081

# 🔧 Environment variables for security
ENV RUST_LOG=info
ENV RUST_BACKTRACE=0

# 🏥 Health check (distroless doesn't have curl, so we'll use a simple check)
# HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
#     CMD ["/usr/local/bin/cerebro-bff", "--health-check"]

# 🚀 Run the application
ENTRYPOINT ["/usr/local/bin/cerebro-bff"]
CMD []

# 🏷️ Labels for SBOM and security tracking
LABEL org.opencontainers.image.title="Cerberus Phoenix Cerebro-BFF"
LABEL org.opencontainers.image.description="Ultra-secure AI orchestration engine with Chainguard base"
LABEL org.opencontainers.image.version="2.0.0"
LABEL org.opencontainers.image.vendor="Cerberus Phoenix"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.source="https://github.com/SynergiaOS/Cerebrosso"
LABEL security.scan.policy="chainguard-strict"
LABEL security.sbom.included="true"
LABEL security.cve.scan="daily"
LABEL security.distroless="true"
LABEL security.nonroot="true"
